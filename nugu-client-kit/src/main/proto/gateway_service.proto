// Copyright 2015 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.skt.nugu.sdk.client.port.transport.grpc.runtime";
option java_outer_classname = "GatewayServiceProto";

service GatewayService {
    rpc GetDeviceContext(DeviceContextRequest) returns (DeviceContextResponse);
    rpc CheckDevicePresence(DevicePresenceRequest) returns (DevicePresenceResponse);
}

message DeviceContextRequest {
    string user_id = 1;
    string device_id = 2;
    bool refresh = 3;       // true : device에 요청을 보내서 최신 context로 전달, false : 서버에 저장된 context 사용
}

message DeviceContextResponse {
    string context = 1;
    int32 last_updated = 2;
}

message DevicePresenceRequest {
    string user_id = 1;
    string device_id = 2;
    bool round_trip_check = 3;    // true : device에 요청을 보내서 응답이 오는지 확인, false : event stream이 열려있는지 여부만 확인
    int32 round_trip_check_timeout = 4; // ms
}

message DevicePresenceResponse {
    enum StreamStatus {
        OPEN = 0;                   // EventStream이 열려 있음
        CLOSED_TEMPORARY = 1;       // EventStream이 닫혀 있으나 GatewayActor는 아직 살아 있음
        CLOSED = 2;                 // EventStream이 닫혀 있고 GatewayActor도 사라짐
    }
    StreamStatus stream_status = 1;
    uint32 last_activity = 2;   // event stream을 통해서 아무 메세지나 주고 받은 최종 시각(unix epoch time)

    enum RoundTripCheckResult {
        OK = 0;
        TIMEOUT = 1;
    }
    // TODO : hand-off 관련 정보 추가
}